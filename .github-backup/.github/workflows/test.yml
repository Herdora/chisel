name: Test & Quality Checks

on:
  push:
    branches: [ main, dev, testing ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', '**/pyproject*.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov ruff mypy

    - name: Lint with ruff
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        ruff check . --output-format=github --select=E9,F63,F7,F82 --show-source
        # Check for other issues but don't fail
        ruff check . --output-format=github || true

    - name: Format check with ruff
      run: |
        ruff format --check .

    - name: Type check with mypy
      run: |
        mypy src/kandc --ignore-missing-imports || true

    - name: Test package installation (kandc)
      run: |
        python -c "import kandc; print('kandc imported successfully')"

    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=kandc --cov-report=xml --cov-report=term

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  test-examples:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        # Install example dependencies
        pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu

    - name: Test basic examples (without capture)
      run: |
        # Test examples that don't require kandc capture
        cd examples
        python test_all_examples.py --dry-run || true

  build-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip build twine

    - name: Test build (kandc)
      run: |
        python -m build
        twine check dist/*

    - name: Test build (kandc-dev)
      run: |
        rm -rf dist build src/*.egg-info
        cp pyproject.dev.toml pyproject.toml
        python -m build
        twine check dist/*
        git checkout -- pyproject.toml

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-files
        path: dist/
        retention-days: 7
